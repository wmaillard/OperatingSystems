#!/bin/bash
arguments=( "$@" )
error="Usage: stats {-rows|-cols} [file]"
fileError="stats: cannot read "
rows=true
file=true


case "${arguments[0]}" in			# Checks to see if the options are for rows or columns
	 "-r"*)							# and sets the rows bool accordingly or returns an error
		rows=true ;;
	"-c"*)
		rows=false ;;
		*)
		echo $error 
		exit 1 ;;
esac

									# Checks to see if a filename is included and if so sets the
									# filename variable.  Returns an error if too many variables.

case $# in
	1 )
		file=false
		unset filename ;;			# unsets filename just in case because line 47 is dependent on set vs unset
	2 )
		filename="${arguments[1]}"
		file=true ;;
	* )
		echo $error 
		exit 1 ;;
esac

									# If there is a filename given but it is not readable, return an error
									
if ! [ $file ]  && [ -r "$filename" ]   
	then
		echo $fileError "$filename"
		exit 1
fi

# Read the data from either the file or STDIN

if [ $file ];
	then 
		numLines=$(cat $filename | wc -l)
	else
		numLines=$(cat $(-/dev/stdin) | wc -l)
fi

echo $numLines

if $rows 
	then 
		while read line
		do
			lineArray=($line)
			echo "${lineArray[0]}"
		done < "${filename:-/dev/stdin}"
	else
		count=1
		while [ $count -le $numLines ]
			do
				echo $count
				let count=count+1
			done
fi


























